<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>The other day</title>
  
  <subtitle>One post every day for one year</subtitle>
  <link href="http://mycaule.github.io/atom.xml" rel="self"/>
  
  <link href="http://mycaule.github.io/"/>
  <updated>2020-11-25T23:22:32.028Z</updated>
  <id>http://mycaule.github.io/</id>
  
  <author>
    <name>Michel Hua</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Book recommendations for 2020</title>
    <link href="http://mycaule.github.io/2020/11/28/books-2020/"/>
    <id>http://mycaule.github.io/2020/11/28/books-2020/</id>
    <published>2020-11-28T14:00:41.000Z</published>
    <updated>2020-11-25T23:22:32.028Z</updated>
    
    <content type="html"><![CDATA[<p>Some books I have read this year and I highly recommend!</p><h3 id="Politics-and-Economy"><a href="#Politics-and-Economy" class="headerlink" title="Politics and Economy"></a>Politics and Economy</h3><div align="center">  <a href="https://www.goodreads.com/book/show/15997149-homo-economicus-proph-te-gar-des-temps-nouveaux"><img src="https://i.gr-assets.com/images/S/compressed.photo.goodreads.com/books/1359840919l/15997149.jpg" width=150></a>  <a href="https://www.goodreads.com/book/show/35612522-des-hommes-qui-lisent"><img src="https://i.gr-assets.com/images/S/compressed.photo.goodreads.com/books/1499361776l/35612522._SY475_.jpg" width=150></a></div><h3 id="Personal-development"><a href="#Personal-development" class="headerlink" title="Personal development"></a>Personal development</h3><div align="center">  <a href="https://www.goodreads.com/book/show/2074149.Understanding_Life"><img src="https://i.gr-assets.com/images/S/compressed.photo.goodreads.com/books/1190612672l/1940020.jpg" width=150></a>  <a href="https://www.goodreads.com/book/show/20821304-rethinking-positive-thinking"><img src="https://i.gr-assets.com/images/S/compressed.photo.goodreads.com/books/1401077636l/20821304.jpg" width=150></a></div><h3 id="Sciences-and-Technologies"><a href="#Sciences-and-Technologies" class="headerlink" title="Sciences and Technologies"></a>Sciences and Technologies</h3><div align="center">  <a href="https://www.goodreads.com/book/show/50204627-google-bigquery"><img src="https://i.gr-assets.com/images/S/compressed.photo.goodreads.com/books/1572263929l/50204627._SX318_SY475_.jpg" width=150 alt="Lakshmanan"></a>  <a href="https://www.goodreads.com/book/show/17287021-the-simpsons-and-their-mathematical-secrets"><img src="https://i.gr-assets.com/images/S/compressed.photo.goodreads.com/books/1376362153l/17287021.jpg" width=150 alt="Singh"></a></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Some books I have read this year and I highly recommend!&lt;/p&gt;
&lt;h3 id=&quot;Politics-and-Economy&quot;&gt;&lt;a href=&quot;#Politics-and-Economy&quot; class=&quot;headerl</summary>
      
    
    
    
    <category term="books" scheme="http://mycaule.github.io/categories/books/"/>
    
    
    <category term="books" scheme="http://mycaule.github.io/tags/books/"/>
    
  </entry>
  
  <entry>
    <title>Ryuji Shirakawa</title>
    <link href="http://mycaule.github.io/2020/11/25/aikido-shirakawa/"/>
    <id>http://mycaule.github.io/2020/11/25/aikido-shirakawa/</id>
    <published>2020-11-25T22:27:00.000Z</published>
    <updated>2020-11-25T22:42:52.514Z</updated>
    
    <content type="html"><![CDATA[<p>Back with some Aikido videos from the young generation!<br>Shirakawa showing the jujitsu roots of aikido, in a very modern and creative style.</p><div class="video-container"><iframe src="https://www.youtube.com/embed/jfN2vwOcwgU" frameborder="0" loading="lazy" allowfullscreen></iframe></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Back with some Aikido videos from the young generation!&lt;br&gt;Shirakawa showing the jujitsu roots of aikido, in a very modern and creative s</summary>
      
    
    
    
    <category term="martial arts" scheme="http://mycaule.github.io/categories/martial-arts/"/>
    
    <category term="aikido" scheme="http://mycaule.github.io/categories/martial-arts/aikido/"/>
    
    
    <category term="aikido" scheme="http://mycaule.github.io/tags/aikido/"/>
    
    <category term="ryuji shirakawa" scheme="http://mycaule.github.io/tags/ryuji-shirakawa/"/>
    
  </entry>
  
  <entry>
    <title>Waltz on the Quai de Seine</title>
    <link href="http://mycaule.github.io/2020/08/01/waltz-veron/"/>
    <id>http://mycaule.github.io/2020/08/01/waltz-veron/</id>
    <published>2020-08-01T10:49:00.000Z</published>
    <updated>2020-11-25T23:19:14.130Z</updated>
    
    <content type="html"><![CDATA[<p>Interesting waltz steps from a scene in the Tango Lesson movie.</p><div class="video-container"><iframe src="https://www.youtube.com/embed/2EJRhLgf1yU" frameborder="0" loading="lazy" allowfullscreen></iframe></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Interesting waltz steps from a scene in the Tango Lesson movie.&lt;/p&gt;
&lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;https://www.youtube.com/emb</summary>
      
    
    
    
    <category term="dancing" scheme="http://mycaule.github.io/categories/dancing/"/>
    
    <category term="tango" scheme="http://mycaule.github.io/categories/dancing/tango/"/>
    
    
    <category term="tango" scheme="http://mycaule.github.io/tags/tango/"/>
    
  </entry>
  
  <entry>
    <title>Starting over again</title>
    <link href="http://mycaule.github.io/2018/03/03/restart/"/>
    <id>http://mycaule.github.io/2018/03/03/restart/</id>
    <published>2018-03-03T15:52:20.000Z</published>
    <updated>2020-10-25T19:37:06.263Z</updated>
    
    <content type="html"><![CDATA[<div class="video-container"><iframe src="https://www.youtube.com/embed/dtclpPhEznQ" frameborder="0" loading="lazy" allowfullscreen></iframe></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/dtclpPhEznQ&quot; frameborder=&quot;0&quot; loading=&quot;lazy&quot; allowfullscreen&gt;&lt;/iframe</summary>
      
    
    
    
    <category term="music" scheme="http://mycaule.github.io/categories/music/"/>
    
    
    <category term="music" scheme="http://mycaule.github.io/tags/music/"/>
    
    <category term="80s" scheme="http://mycaule.github.io/tags/80s/"/>
    
  </entry>
  
  <entry>
    <title>Dirty boxing</title>
    <link href="http://mycaule.github.io/2017/12/19/dirty-boxing/"/>
    <id>http://mycaule.github.io/2017/12/19/dirty-boxing/</id>
    <published>2017-12-19T07:15:18.000Z</published>
    <updated>2020-11-25T23:08:47.069Z</updated>
    
    <content type="html"><![CDATA[<p>Men can loose their mind in a fraction of a second, even highly trained athletes.</p><div class="video-container"><iframe src="https://www.youtube.com/embed/HjuaeKMeRf8" frameborder="0" loading="lazy" allowfullscreen></iframe></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Men can loose their mind in a fraction of a second, even highly trained athletes.&lt;/p&gt;
&lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;https://w</summary>
      
    
    
    
    <category term="martial arts" scheme="http://mycaule.github.io/categories/martial-arts/"/>
    
    <category term="boxing" scheme="http://mycaule.github.io/categories/martial-arts/boxing/"/>
    
    
    <category term="boxing" scheme="http://mycaule.github.io/tags/boxing/"/>
    
  </entry>
  
  <entry>
    <title>Colorizing old photos</title>
    <link href="http://mycaule.github.io/2017/12/12/coloring-photos/"/>
    <id>http://mycaule.github.io/2017/12/12/coloring-photos/</id>
    <published>2017-12-12T17:17:24.000Z</published>
    <updated>2020-10-25T19:37:06.257Z</updated>
    
    <content type="html"><![CDATA[<p>Interesting video about black &amp; white vision vs. color vision.</p><div class="video-container"><iframe src="https://www.youtube.com/embed/vubuBrcAwtY" frameborder="0" loading="lazy" allowfullscreen></iframe></div><p>Check also <a href="https://www.khanacademy.org/partner-content/pixar/color">Pixar online course</a> on how they color in 3D animation. There is also <a href="https://github.com/emilwallner/Coloring-greyscale-images-in-Keras">some research</a> going on in Artificial Intelligence to automatically color images.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Interesting video about black &amp;amp; white vision vs. color vision.&lt;/p&gt;
&lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;https://www.youtube.com/</summary>
      
    
    
    
    <category term="programming" scheme="http://mycaule.github.io/categories/programming/"/>
    
    <category term="mathematics" scheme="http://mycaule.github.io/categories/programming/mathematics/"/>
    
    
    <category term="drawing" scheme="http://mycaule.github.io/tags/drawing/"/>
    
  </entry>
  
  <entry>
    <title>Refactoring a library in ES6</title>
    <link href="http://mycaule.github.io/2017/12/06/es6-refactoring/"/>
    <id>http://mycaule.github.io/2017/12/06/es6-refactoring/</id>
    <published>2017-12-06T15:00:00.000Z</published>
    <updated>2020-10-25T19:37:06.257Z</updated>
    
    <content type="html"><![CDATA[<p>Some technical notes while refactoring a library in ES6.</p><p>I recently worked on a refactoring of <a href="https://github.com/galaxykate/tracery">Tracery</a> and <a href="https://github.com/v21/tracery">corresponding NPM package</a> into this <a href="https://npmjs.com/package/epures">NPM package</a> and <a href="https://cdn.jsdelivr.net/npm/epures/dist/epures.min.js">browser library</a>.</p><h2 id="Initial-build-issues"><a href="#Initial-build-issues" class="headerlink" title="Initial build issues"></a>Initial build issues</h2><p>The library had two repositories to maintain the same code.</p><p>I unified the build starting from the Node.js library and then build the browser library using Webpack.</p><p>Proper linting can solves lots of issues, <a href="https://github.com/sindresorhus/xo"><code>xo</code></a> is a nice tool that does most of the job. It has an atom plugin and can implement <a href="https://eslint.org/"><code>eslint</code></a> rules as well. Lots of improvements to the language have been made since <em>ES6</em>.</p><p>Unit tests are important, I used <a href="https://github.com/avajs/ava"><code>ava</code></a> and <a href="https://github.com/avajs/atom-ava">atom plugin</a> to write basic typing verification tests first then gradually added more functional tests.</p><h2 id="Packaging-for-NPM"><a href="#Packaging-for-NPM" class="headerlink" title="Packaging for NPM"></a>Packaging for NPM</h2><p>Keys to success are:</p><ul><li>Writing a clean README file</li><li>Use logo and badges to communicate to users that the library is actively maintained</li></ul><h2 id="Refactoring-for-good"><a href="#Refactoring-for-good" class="headerlink" title="Refactoring for good"></a>Refactoring for good</h2><p>Once this security net is set up, all the refactoring tasks are easy:</p><ul><li>Splitting up the files into classes.</li><li>Cleaning bad smells (for loops, linting errors)</li><li>Functional style programming make the code easier to read and maintainable in the future.</li></ul><p>Now the library can evolve and use ES6 sugar syntax, spread operators and generators are interesting for the matter. If you want to contribute please go to the <a href="https://github.com/galaxykate/tracery">GitHub repo</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Some technical notes while refactoring a library in ES6.&lt;/p&gt;
&lt;p&gt;I recently worked on a refactoring of &lt;a href=&quot;https://github.com/galaxyk</summary>
      
    
    
    
    <category term="programming" scheme="http://mycaule.github.io/categories/programming/"/>
    
    <category term="es6" scheme="http://mycaule.github.io/categories/programming/es6/"/>
    
    
    <category term="es6" scheme="http://mycaule.github.io/tags/es6/"/>
    
  </entry>
  
  <entry>
    <title>Some walking variations</title>
    <link href="http://mycaule.github.io/2017/11/27/fabian-salas-walking/"/>
    <id>http://mycaule.github.io/2017/11/27/fabian-salas-walking/</id>
    <published>2017-11-27T10:30:47.000Z</published>
    <updated>2020-10-25T19:37:06.257Z</updated>
    
    <content type="html"><![CDATA[<p>Two videos from Fabian Salas and his partner Cecilia Gonzalez.</p><p>The first one is from the <em>Tango Fundamentals</em> course: no ocho, no molinete, just pure elegant walk. The song name is <em>El pollito</em> by <em>Carlos di Sarli</em>.</p><div class="video-container"><iframe src="https://www.youtube.com/embed/UqX3eSNGofY" frameborder="0" loading="lazy" allowfullscreen></iframe></div><p>A public performance on the song <em>Gallo Ciego</em> by <em>Osvaldo Pugliese</em>.</p><div class="video-container"><iframe src="https://www.youtube.com/embed/tTMDeCw19EE" frameborder="0" loading="lazy" allowfullscreen></iframe></div><p>I really liked the clearness of their moves and their sense of musicality.</p><p>Maximum efficiency with minimum effort.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Two videos from Fabian Salas and his partner Cecilia Gonzalez.&lt;/p&gt;
&lt;p&gt;The first one is from the &lt;em&gt;Tango Fundamentals&lt;/em&gt; course: no oc</summary>
      
    
    
    
    <category term="dancing" scheme="http://mycaule.github.io/categories/dancing/"/>
    
    <category term="tango" scheme="http://mycaule.github.io/categories/dancing/tango/"/>
    
    
    <category term="fabian salas" scheme="http://mycaule.github.io/tags/fabian-salas/"/>
    
    <category term="tango" scheme="http://mycaule.github.io/tags/tango/"/>
    
  </entry>
  
  <entry>
    <title>Richard Galliano plays Piazzola at the accordion</title>
    <link href="http://mycaule.github.io/2017/10/26/libertango/"/>
    <id>http://mycaule.github.io/2017/10/26/libertango/</id>
    <published>2017-10-26T07:29:13.000Z</published>
    <updated>2020-10-25T19:37:06.263Z</updated>
    
    <content type="html"><![CDATA[<p>Nice accordion solo from <em>Piazzolla Forever</em>.</p><div class="video-container"><iframe src="https://www.youtube.com/embed/quZuGOcmVQ0" frameborder="0" loading="lazy" allowfullscreen></iframe></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Nice accordion solo from &lt;em&gt;Piazzolla Forever&lt;/em&gt;.&lt;/p&gt;
&lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/quZuGOcm</summary>
      
    
    
    
    <category term="dancing" scheme="http://mycaule.github.io/categories/dancing/"/>
    
    <category term="tango" scheme="http://mycaule.github.io/categories/dancing/tango/"/>
    
    
    <category term="tango" scheme="http://mycaule.github.io/tags/tango/"/>
    
    <category term="richard galliano" scheme="http://mycaule.github.io/tags/richard-galliano/"/>
    
  </entry>
  
  <entry>
    <title>Building a chatbot in Node.js with Smooch, Dialogflow and GitHub APIs</title>
    <link href="http://mycaule.github.io/2017/10/24/chatbot/"/>
    <id>http://mycaule.github.io/2017/10/24/chatbot/</id>
    <published>2017-10-24T16:15:49.000Z</published>
    <updated>2020-10-25T19:37:06.254Z</updated>
    
    <content type="html"><![CDATA[<p>See <a href="https://github.com/mycaule/ama-bot">https://github.com/mycaule/ama-bot</a><br>To be documented.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;See &lt;a href=&quot;https://github.com/mycaule/ama-bot&quot;&gt;https://github.com/mycaule/ama-bot&lt;/a&gt;&lt;br&gt;To be documented.&lt;/p&gt;
</summary>
      
    
    
    
    <category term="projects" scheme="http://mycaule.github.io/categories/projects/"/>
    
    
    <category term="chatbot" scheme="http://mycaule.github.io/tags/chatbot/"/>
    
  </entry>
  
  <entry>
    <title>The modern values of craftmanship</title>
    <link href="http://mycaule.github.io/2017/10/23/rondibois/"/>
    <id>http://mycaule.github.io/2017/10/23/rondibois/</id>
    <published>2017-10-23T10:07:24.000Z</published>
    <updated>2020-10-25T19:37:06.263Z</updated>
    
    <content type="html"><![CDATA[<div class="video-container"><iframe src="https://player.vimeo.com/video/239426785" frameborder="0" loading="lazy" allowfullscreen></iframe></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;https://player.vimeo.com/video/239426785&quot; frameborder=&quot;0&quot; loading=&quot;lazy&quot; allowfullscreen&gt;&lt;/iframe&gt;</summary>
      
    
    
    
    <category term="management" scheme="http://mycaule.github.io/categories/management/"/>
    
    
    <category term="management" scheme="http://mycaule.github.io/tags/management/"/>
    
  </entry>
  
  <entry>
    <title>Final thoughts on Kubernetes</title>
    <link href="http://mycaule.github.io/2017/10/21/kubernetes-final-thoughts/"/>
    <id>http://mycaule.github.io/2017/10/21/kubernetes-final-thoughts/</id>
    <published>2017-10-21T16:41:08.000Z</published>
    <updated>2020-10-25T19:37:06.258Z</updated>
    
    <content type="html"><![CDATA[<p>In production, define deployments to setup replicas in case of failure.<br>Modify deployments.<br>Rolling updates.</p><p>Works ideally with this stack, and might need tweaking if changing any of the below components:</p><ul><li>Any continuous integration build tool</li><li>Container technology : Docker</li><li>Kubernetes</li><li>Cloud platform : Google Cloud Platform</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kubectl describe deployments [name]</span><br><span class="line">kubectl get replicasets</span><br><span class="line"></span><br><span class="line">kubectl apply -f [deployment-yaml]</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;In production, define deployments to setup replicas in case of failure.&lt;br&gt;Modify deployments.&lt;br&gt;Rolling updates.&lt;/p&gt;
&lt;p&gt;Works ideally w</summary>
      
    
    
    
    
    <category term="kubernetes" scheme="http://mycaule.github.io/tags/kubernetes/"/>
    
    <category term="microservices" scheme="http://mycaule.github.io/tags/microservices/"/>
    
  </entry>
  
  <entry>
    <title>Scalable microservices - Part 3</title>
    <link href="http://mycaule.github.io/2017/10/20/scalable-microservices-lesson3/"/>
    <id>http://mycaule.github.io/2017/10/20/scalable-microservices-lesson3/</id>
    <published>2017-10-20T12:00:58.000Z</published>
    <updated>2020-10-25T19:37:06.264Z</updated>
    
    <content type="html"><![CDATA[<p>Today infrastructure is more about choose of tools rather than developing yourself. IT today is about higher level services.</p><p>Kubernetes is an abstraction for containers. It enables to treat a entire cluster like a single machine.</p><p>Pod have an IP address and can access volumes, they are apps containers.</p><p>Using nginx to reverse proxy the app in HTTPS:</p><div class="video-container"><iframe src="https://www.youtube.com/embed/iL_L3nIJ3dQ" frameborder="0" loading="lazy" allowfullscreen></iframe></div><p>Monitoring and Health checks : <a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/">https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/</a><br>Configuration: <a href="http://kubernetes.io/docs/user-guide/configmap/">http://kubernetes.io/docs/user-guide/configmap/</a><br>Secrets: <a href="http://kubernetes.io/docs/user-guide/secrets/">http://kubernetes.io/docs/user-guide/secrets/</a></p><p>Configuration and secrets files are accessed through mounted volumes defined in the kubernetes YAML configuration file after loading the <code>secrets</code> and <code>configmap</code> on the master node.</p><p>Service is another level of abstraction: it is a set of identical pods.</p><p>Services: <a href="http://kubernetes.io/docs/user-guide/services/">http://kubernetes.io/docs/user-guide/services/</a></p><p>Sample configuration files: <a href="https://github.com/udacity/ud615/tree/master/kubernetes">https://github.com/udacity/ud615/tree/master/kubernetes</a></p><p>###Useful commands</p><p>Create a Kubernetes cluster</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gcloud container clusters create k0</span><br><span class="line">gcloud components install kubectl</span><br></pre></td></tr></table></figure><p>Create a pod.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f [yaml-file]</span><br></pre></td></tr></table></figure><p>Port forwarding between the cluster and the master machine.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl port-forward monolith 10080:80</span><br><span class="line"># http:&#x2F;&#x2F;localhost:10080</span><br><span class="line">kubectl logs -f monolith</span><br></pre></td></tr></table></figure><p>Executing from within the container</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl exec monolith --stdin --tty -c monolith &#x2F;bin&#x2F;sh</span><br></pre></td></tr></table></figure><p>Setting nginx configuration and TLS keys.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">kubectl create secret generic [name] --from-file&#x3D;[folderls]</span><br><span class="line">kubectl describe secrets [name]</span><br><span class="line">kubectl create configmap [name] --from-file [conf-file]</span><br><span class="line">kubectl describe configmap [name]</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Create a service</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f [yaml-file of type NodePort]</span><br></pre></td></tr></table></figure><h3 id="References"><a href="#References" class="headerlink" title="References"></a>References</h3><p><a href="http://kubernetes.io/docs/user-guide/kubectl-cheatsheet/">Kubernetes cheatsheet</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Today infrastructure is more about choose of tools rather than developing yourself. IT today is about higher level services.&lt;/p&gt;
&lt;p&gt;Kuber</summary>
      
    
    
    
    <category term="programming" scheme="http://mycaule.github.io/categories/programming/"/>
    
    <category term="microservices" scheme="http://mycaule.github.io/categories/programming/microservices/"/>
    
    
    <category term="kubernetes" scheme="http://mycaule.github.io/tags/kubernetes/"/>
    
    <category term="microservices" scheme="http://mycaule.github.io/tags/microservices/"/>
    
  </entry>
  
  <entry>
    <title>Scalable microservices - Part 2</title>
    <link href="http://mycaule.github.io/2017/10/19/scalable-microservices-lesson2/"/>
    <id>http://mycaule.github.io/2017/10/19/scalable-microservices-lesson2/</id>
    <published>2017-10-19T08:00:48.000Z</published>
    <updated>2020-10-25T19:37:06.264Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://classroom.udacity.com/courses/ud615/lessons/7826816435/concepts/81980819440923">Lesson 2</a> tells us how to use Docker and run an instance on Google Cloud Platform.</p><p>Using Google Compute Engine we first create a new linux image, connect to it through SSH. Then run docker containers on top of it.</p><p>Containers main advantage is that you can run two virtual machines on the same operating system. You can retrieve image from a repo and manage instances with the <code>docker</code> command line tool like you would with a regular UNIX process.</p><p>Docker images can be either downloaded or customly built using dockerfiles. Developers responsibility in this case is to delivery the application AND the configuration file for the container.</p><p>The docker images then can be sent in a public or private registry for reuse. Most notables ones are <a href="https://hub.docker.com/">Docker Hub</a>, <a href="https://quay.io/">Quay</a>, <a href="https://cloud.google.com/container-registry/docs/">Google Cloud Registry</a>.</p><h2 id="Useful-commands"><a href="#Useful-commands" class="headerlink" title="Useful commands"></a>Useful commands</h2><p>Creating an instance called <code>ubuntu</code> on <em>Compute Engine</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcloud compute instances create ubuntu --image-project ubuntu-os-cloud --image ubuntu-1604-xenial-v20160420c</span><br></pre></td></tr></table></figure><p>SSH connecting to it</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcloud compute ssh ubuntu</span><br></pre></td></tr></table></figure><p>Running nginx on the remote host.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">michel@ubuntu:~$ sudo apt-get install nginx</span><br><span class="line">michel@ubuntu:~$ sudo systemctl start nginx</span><br><span class="line">michel@ubuntu:~$ curl localhost</span><br></pre></td></tr></table></figure><p>Installing docker on the operating system.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install docker.io</span><br></pre></td></tr></table></figure><p>Listing docker images and downloading nginx image.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">michel@ubuntu:~$ docker images</span><br><span class="line">michel@ubuntu:~$ docker pull nginx:1.10.0</span><br></pre></td></tr></table></figure><p>Running an image. The image is pulled off automatically if not found locally.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">michel@ubuntu:~$ docker run -d nginx:1.10.0</span><br><span class="line">michel@ubuntu:~$ docker run -d nginx:1.9.3</span><br></pre></td></tr></table></figure><p>Checking which instance is running</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">michel@ubuntu:~$ docker ps</span><br></pre></td></tr></table></figure><p>Stoping a docker instance</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Stoping instance</span><br><span class="line">michel@ubuntu:~$ docker stop [container id]</span><br><span class="line"># Removing instance and configuration files</span><br><span class="line">michel@ubuntu:~$ docker rm [container id]</span><br></pre></td></tr></table></figure><p>Get the ip address of a docker instance</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker inspect [container id]</span><br><span class="line">curl http:&#x2F;&#x2F;[ip address from inspect]</span><br></pre></td></tr></table></figure><p>Sample Dockerfile defining a base image (Alpine Linux),</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">FROM alpine:3.1</span><br><span class="line">MAINTAINER Kelsey Hightower &lt;kelsey.hightower@gmail.com&gt;</span><br><span class="line">ADD hello &#x2F;usr&#x2F;bin&#x2F;hello</span><br><span class="line">ENTRYPOINT [&quot;hello&quot;]</span><br></pre></td></tr></table></figure><p>Then build the docker image and run it as told above.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t hello:1.0.0</span><br></pre></td></tr></table></figure><p>Pushing an image on a registry</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker tag hello:1.0.0 username&#x2F;hello:1.0.0</span><br><span class="line">docker login</span><br><span class="line">docker push username&#x2F;hello:1.0.0</span><br></pre></td></tr></table></figure><h2 id="To-check-later"><a href="#To-check-later" class="headerlink" title="To check later"></a>To check later</h2><ul><li><a href="https://cloud.google.com/sdk/gcloud/reference/compute/instances/create">GCP Documentation - gcloud compute instances create</a><ul><li>The list of images available can be obtained with <code>gcloud compute images list</code>: <code>centos</code>, <code>cos</code>, <code>debian</code>, <code>rhel</code>, <code>suse</code>, <code>suse-sap</code>, <code>ubuntu-os</code>, <code>windows</code>, <code>windows-sql</code>…</li></ul></li><li><a href="https://docs.docker.com/registry/deploying/">Docker docs - Deploy a registry server</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://classroom.udacity.com/courses/ud615/lessons/7826816435/concepts/81980819440923&quot;&gt;Lesson 2&lt;/a&gt; tells us how to use Docker </summary>
      
    
    
    
    <category term="programming" scheme="http://mycaule.github.io/categories/programming/"/>
    
    <category term="microservices" scheme="http://mycaule.github.io/categories/programming/microservices/"/>
    
    
    <category term="kubernetes" scheme="http://mycaule.github.io/tags/kubernetes/"/>
    
    <category term="microservices" scheme="http://mycaule.github.io/tags/microservices/"/>
    
  </entry>
  
  <entry>
    <title>Scalable microservices - Part 1</title>
    <link href="http://mycaule.github.io/2017/10/18/scalable-microservices-lesson1/"/>
    <id>http://mycaule.github.io/2017/10/18/scalable-microservices-lesson1/</id>
    <published>2017-10-18T10:49:00.000Z</published>
    <updated>2020-10-25T19:37:06.264Z</updated>
    
    <content type="html"><![CDATA[<p>Today, I am learning more about microservices, a subject software architect Martin Fowler has been writing about a lot in his <a href="https://martinfowler.com/articles/microservices.html">personal blog</a>.</p><p>Kubernetes looks like a cool technology. Google, who supports it, has an online course <a href="https://www.udacity.com/course/scalable-microservices-with-kubernetes--ud615">Scalable Microservices with Kubernetes</a> intended for both devops and developers.</p><p>The course has 4 lessons of 2 hours each for the following topics:</p><ul><li>Introduction to Microservices</li><li>Building the Containers with Docker</li><li>Kubernetes</li><li>Deploying Microservices</li></ul><p>Here are my notes for the lesson 1 <a href="https://classroom.udacity.com/courses/ud615/lessons/7826112332/concepts/81910831080923">Introduction to microservices</a>:</p><p>The course uses the following technology to demonstrate : Docker, Go language, Google Cloud Container Engine.</p><p>The software industry is pressuring developers to release more often and more quickly. Microservices allows them to do with a simplified lifecycle but require tools to use automation and infrastructure capacity to their limits.</p><p>Lesson 1 asks us build a Go project <a href="https://github.com/udacity/ud615/tree/master/app">from Github</a> which is a webserver doing authentication and building separate microservices from it.</p><p>More stuff coming tomorrow with <a href="https://classroom.udacity.com/courses/ud615/lessons/7826816435/concepts/81980819440923">Lesson 2</a>.</p><h2 id="To-check-later"><a href="#To-check-later" class="headerlink" title="To check later"></a>To check later</h2><p>Kelsey Hightower, main contributor of Kubernetes at Google has written <a href="https://github.com/kelseyhightower/kubernetes-the-hard-way">a more comprehensive tutorial</a> on GitHub.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Today, I am learning more about microservices, a subject software architect Martin Fowler has been writing about a lot in his &lt;a href=&quot;ht</summary>
      
    
    
    
    <category term="programming" scheme="http://mycaule.github.io/categories/programming/"/>
    
    <category term="microservices" scheme="http://mycaule.github.io/categories/programming/microservices/"/>
    
    
    <category term="kubernetes" scheme="http://mycaule.github.io/tags/kubernetes/"/>
    
    <category term="microservices" scheme="http://mycaule.github.io/tags/microservices/"/>
    
  </entry>
  
  <entry>
    <title>Managing the laser fields</title>
    <link href="http://mycaule.github.io/2017/10/17/laser-fields/"/>
    <id>http://mycaule.github.io/2017/10/17/laser-fields/</id>
    <published>2017-10-17T10:00:00.000Z</published>
    <updated>2020-10-25T19:37:06.259Z</updated>
    
    <content type="html"><![CDATA[<div class="video-container"><iframe src="https://www.youtube.com/embed/IuP6qwunOD4" frameborder="0" loading="lazy" allowfullscreen></iframe></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/IuP6qwunOD4&quot; frameborder=&quot;0&quot; loading=&quot;lazy&quot; allowfullscreen&gt;&lt;/iframe</summary>
      
    
    
    
    <category term="management" scheme="http://mycaule.github.io/categories/management/"/>
    
    <category term="constraints" scheme="http://mycaule.github.io/categories/management/constraints/"/>
    
    
    <category term="dancing" scheme="http://mycaule.github.io/tags/dancing/"/>
    
    <category term="laser" scheme="http://mycaule.github.io/tags/laser/"/>
    
    <category term="capoeira" scheme="http://mycaule.github.io/tags/capoeira/"/>
    
    <category term="vincent cassel" scheme="http://mycaule.github.io/tags/vincent-cassel/"/>
    
  </entry>
  
  <entry>
    <title>Writing a book</title>
    <link href="http://mycaule.github.io/2017/10/16/writing-a-book/"/>
    <id>http://mycaule.github.io/2017/10/16/writing-a-book/</id>
    <published>2017-10-16T14:49:38.000Z</published>
    <updated>2020-10-25T19:37:06.264Z</updated>
    
    <content type="html"><![CDATA[<p>Today I found out some interesting resources for <a href="https://github.com/TalAter/awesome-book-authoring" title="" target="">book authoring</a>.</p><p>Software books writer Scott Meyers <a href="http://www.aristeia.com/authorAdvice.html" title="" target="">gives developers tips</a> on how to manage such a project.</p><p>As Tim Ferris wrote and proved with the 4-Hour workweek, writing a book can be a one man business muse.</p><a href="https://hackernoon.com/living-the-future-of-technical-writing-2f368bd0a272" title="" target="">Modern tools</a> such as <a href="http://asciidoctor.org/docs/asciidoc-writers-guide/" title="% } and {% link Atlas https:&#x2F;&#x2F;atlas.oreilly.com" target="">Asciidoc</a> from O'Reilly can facilitate the workflow so that it very much looks like the workflow of software engineering with build and continuous integration aspects.<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul><li><a href="http://aosabook.org/en/index.html">The architecture of Open Source Applications</a></li><li><a href="https://zenhabits.net/writing/">Zen Habits - Training to be a good writer</a></li><li><a href="https://www.forbes.com/sites/dailymuse/2016/06/22/how-to-write-a-linkedin-article-if-youre-not-a-writer-and-still-sound-credible">Forbes - How to write a LinkedIn article if you’re not a writer</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Today I found out some interesting resources for &lt;a href=&quot;https://github.com/TalAter/awesome-book-authoring&quot; title=&quot;&quot; target=&quot;&quot;&gt;book auth</summary>
      
    
    
    
    <category term="projects" scheme="http://mycaule.github.io/categories/projects/"/>
    
    <category term="writing" scheme="http://mycaule.github.io/categories/projects/writing/"/>
    
    
    <category term="technical writing" scheme="http://mycaule.github.io/tags/technical-writing/"/>
    
    <category term="publishing" scheme="http://mycaule.github.io/tags/publishing/"/>
    
  </entry>
  
  <entry>
    <title>Jessica Cox at Capital Swing</title>
    <link href="http://mycaule.github.io/2017/10/15/capital-swing/"/>
    <id>http://mycaule.github.io/2017/10/15/capital-swing/</id>
    <published>2017-10-15T13:00:00.000Z</published>
    <updated>2020-10-25T19:37:06.253Z</updated>
    
    <content type="html"><![CDATA[<div class="video-container"><iframe src="https://www.youtube.com/embed/udqBB0R5SPI" frameborder="0" loading="lazy" allowfullscreen></iframe></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/udqBB0R5SPI&quot; frameborder=&quot;0&quot; loading=&quot;lazy&quot; allowfullscreen&gt;&lt;/iframe</summary>
      
    
    
    
    <category term="dancing" scheme="http://mycaule.github.io/categories/dancing/"/>
    
    <category term="swing" scheme="http://mycaule.github.io/categories/dancing/swing/"/>
    
    
    <category term="sean mckeever" scheme="http://mycaule.github.io/tags/sean-mckeever/"/>
    
    <category term="jessica cox" scheme="http://mycaule.github.io/tags/jessica-cox/"/>
    
    <category term="dancing" scheme="http://mycaule.github.io/tags/dancing/"/>
    
  </entry>
  
  <entry>
    <title>Accounting from the CLI with Ledger</title>
    <link href="http://mycaule.github.io/2017/10/13/ledger/"/>
    <id>http://mycaule.github.io/2017/10/13/ledger/</id>
    <published>2017-10-13T14:04:29.000Z</published>
    <updated>2020-10-25T19:37:06.259Z</updated>
    
    <content type="html"><![CDATA[<p>Doing basic <a href="https://en.wikipedia.org/wiki/Bookkeeping" title="" target="">balanced accounting</a> from the command line with <a href="http://ledger-cli.org/" title="" target="">Ledger CLI</a>.</p><p>Ledger is an un-opinionated tool for text logging every financial transaction you make.</p><p>Logging directly from the Atom text editor with the <a href="https://atom.io/packages/language-ledger" title="" target="">language-ledger</a> plugin.</p><img src="/2017/10/13/ledger/balancing.png" class=""><p>Correcting mistakes with the debugger and generating a detailed report.</p><img src="/2017/10/13/ledger/debuging.png" class=""><p>Summary by topic to see how much I have spent so far for lunch at work.</p><img src="/2017/10/13/ledger/summary.png" class="">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Doing basic &lt;a href=&quot;https://en.wikipedia.org/wiki/Bookkeeping&quot; title=&quot;&quot; target=&quot;&quot;&gt;balanced accounting&lt;/a&gt; from the command line with &lt;a </summary>
      
    
    
    
    <category term="management" scheme="http://mycaule.github.io/categories/management/"/>
    
    <category term="budget tracking" scheme="http://mycaule.github.io/categories/management/budget-tracking/"/>
    
    
    <category term="command line" scheme="http://mycaule.github.io/tags/command-line/"/>
    
    <category term="ledger" scheme="http://mycaule.github.io/tags/ledger/"/>
    
    <category term="money" scheme="http://mycaule.github.io/tags/money/"/>
    
  </entry>
  
  <entry>
    <title>Using JIRA from the CLI</title>
    <link href="http://mycaule.github.io/2017/10/12/jira-command-line/"/>
    <id>http://mycaule.github.io/2017/10/12/jira-command-line/</id>
    <published>2017-10-12T15:00:00.000Z</published>
    <updated>2020-10-25T19:37:06.258Z</updated>
    
    <content type="html"><![CDATA[<p>Some cool stuff you can do with JIRA inside the command line.</p><p><a href="https://github.com/germanrcuriel/jira-cmd">https://github.com/germanrcuriel/jira-cmd</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Some cool stuff you can do with JIRA inside the command line.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/germanrcuriel/jira-cmd&quot;&gt;https://github.c</summary>
      
    
    
    
    <category term="management" scheme="http://mycaule.github.io/categories/management/"/>
    
    <category term="time tracking" scheme="http://mycaule.github.io/categories/management/time-tracking/"/>
    
    
    <category term="jira" scheme="http://mycaule.github.io/tags/jira/"/>
    
    <category term="time" scheme="http://mycaule.github.io/tags/time/"/>
    
    <category term="command line" scheme="http://mycaule.github.io/tags/command-line/"/>
    
  </entry>
  
</feed>
